# -*- coding: utf-8 -*-
"""logistic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yQ75r6X2F865TMfX-6DImTjrk_Z8tG72
"""

from google.colab import drive
drive.mount('/content/drive')
import numpy as np
from matplotlib import pyplot as plot
from numpy import genfromtxt
data_path = '/content/drive/MyDrive/Colab Notebooks/wdbc.csv'
lrs = genfromtxt(data_path, delimiter=',')
print(lrs)

length = len(lrs)
print(length)

#dropping the class column
lrs_data = lrs[:, 1]

#dropping the id and class column
lrs1 = lrs[: , 2: ]
print(lrs1)

lrs1 = lrs1.tolist()
for i in range(len(lrs1)):
  lrs1[i].append(lrs_data[i])
lrs2 = np.array(lrs1)
print(lrs2)
type(lrs2)

dlen = len(lrs2)
print(dlen)

training_num = round((dlen * 70)/100)
print(training_num)

val_num = round((dlen * 15)/100)
print(val_num)

testing_num = round((dlen * 15)/100)
print(testing_num)

tr_dts = lrs2[0:training_num, :]
val_dts = lrs2[training_num: training_num + val_num, :]
ts_dts = lrs2[training_num + val_num: , :]

print("\ntraining data set:")
print(tr_dts)
print("break")
print("\nvalidation set:")
print(val_dts)
print("break")
print("\ntesting data set:")
print(ts_dts)

trarray = np.array(tr_dts)
varray = np.array(val_dts)
tsarray = np.array(ts_dts)

theta = [1, 1, 0.5, 0.5, 12, 1, 2, 1, 23, 2, 0.5, 1, 3, 1, 0.8, 0.5, 2.5, 1, 2, 1, 1, 2, 0.5, 3.7, 2, 4.5, 1, 2.5, 1.5, 9.5 ,0.5]
crt = 0
error = 0
lrg = 0.001
terror = 0
t_er = []
new_lrs = []

for i in range(1000):
  a = (i+1) % 50
  if i == 0:
    print(terror)
  elif a == 0:
    print(terror)

  terror = 0
  for i in range(len(trarray)):
      pred = 0
      b = 0
      c = [trarray[i][0], trarray[i][1], trarray[i][2], trarray[i][3], trarray[i][4], trarray[i][5], trarray[i][6], trarray[i][7], trarray[i][8], trarray[i][9], trarray[i][10], trarray[i][11], trarray[i][12], trarray[i][13], trarray[i][14],  trarray[i][15], trarray[i][16], trarray[i][17], trarray[i][18], trarray[i][19], trarray[i][20], trarray[i][21], trarray[i][22], trarray[i][23], trarray[i][24], trarray[i][25], trarray[i][26], trarray[i][27], trarray[i][28], trarray[i][29], trarray[i][30]]

      pred = np.dot(c,theta)+crt
      # print(z)

      b = 1 / (1 + np.exp(-pred))
      # print(h)

      if b == 1:
        b= b - 0.0001
      elif b == 0:
        b = b + 0.0001

      y = int(trarray[i][30])
      error1 = (-y*np.log(b)) - ((1-y)*np.log(1-b))

      terror = terror + error1

      dv = np.dot(c,(b-y))

      theta = theta - (np.dot(dv,lrg))

      crt = crt - (b-y)

  t_er.append(terror)

print(t_er)

count1 = 0

for i in range(len(tsarray)):
  y = [tsarray[i][0], tsarray[i][1], tsarray[i][2], tsarray[i][3], tsarray[i][4], tsarray[i][5], tsarray[i][6], tsarray[i][7], tsarray[i][8], tsarray[i][9], tsarray[i][10], tsarray[i][11], tsarray[i][12], tsarray[i][13], tsarray[i][14],  tsarray[i][15], tsarray[i][16], tsarray[i][17], tsarray[i][18], tsarray[i][19], tsarray[i][20], tsarray[i][21], tsarray[i][22], tsarray[i][23], tsarray[i][24], tsarray[i][25], tsarray[i][26], tsarray[i][27], tsarray[i][28], tsarray[i][29], tsarray[i][30]]

  temp = np.dot(theta,y)+crt
  if temp<0.5:
    new_lrs.append(0)
  elif temp>=0.5:
    new_lrs.append(1)

for i in range(len(tsarray)):
  if new_lrs[i] == tsarray[i][30]:
    count1 = count1+1

acc = (count1/len(tsarray))*100
error = 100 - acc


print("Accuracy: ",acc,"%")
print("Total Error: ",error,"%")

diff = []
for i in range(1000):
  diff.append(i)

print(len(t_er))

plot.plot(diff,t_er, color= 'red',label = "")