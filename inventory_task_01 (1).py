# -*- coding: utf-8 -*-
"""inventory_task_01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18q1HxfkCoJpGu1BoxJYJZhZXf0iem7nt
"""

# -*- coding: utf-8 -*-
"""Inventory_Task_01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cycLS6wYs-4esoqISvE6jNqG63a4viLg
"""

import numpy as np
import matplotlib.pyplot as plt

print("Enter the max capacity(m) and review period(n):")
m, n = input().split()
m=int(m)
n=int(n)


beginning_inventory = 3
daily_demand = 0
ending_inventory = 0
shortage_quantity = 0
order_quantity = 8
days_until_arrival = 2
total_ending_inventory=0
shortage_days=0

y = []

for cycle in range(1,11):    # 10 days of Cycle determined
    print("Cycle No: ", cycle)
    for day in range(1,n+1):
        print("Day No: ", day)

        days_until_arrival -= 1

        # Check if order arrives
        if days_until_arrival == -1:
            beginning_inventory += order_quantity
            order_quantity = 0

        # Daily demand
        daily_demand = np.random.choice(a=[0,1,2,3,4], p=[0.10, 0.25, 0.35, 0.21, 0.09])
        total_demand = daily_demand + shortage_quantity

        if total_demand <= beginning_inventory:
            # No shortage
            ending_inventory = beginning_inventory - total_demand
            shortage_quantity = 0
        else:
            # Shortage
            ending_inventory = 0
            shortage_quantity = total_demand - beginning_inventory

        # Check capacity
        if ending_inventory > m:
            ending_inventory = m

        # For graph
        y.append(ending_inventory)

        # Total Ending Inventory Calculation
        total_ending_inventory += ending_inventory

        # Shortage days Count
        if shortage_quantity !=0:
            shortage_days +=1

        # Review day
        if day==n:
            order_quantity = m - ending_inventory + shortage_quantity
            days_until_arrival = np.random.choice(a=[1,2,3], p=[0.6,0.3,0.1]) # lead time

        # Prints
        print("Beginning Inventory : ", beginning_inventory)
        print("Daily Demand : ", daily_demand)
        print("Ending Inventory : ", ending_inventory)
        print("Shortage Quantity : ", shortage_quantity)
        print("Order Quantity : ", order_quantity)
        print("Days until arrival : ", days_until_arrival)

        print("-------------------")

        beginning_inventory = ending_inventory




    print("--------End Cycle-----------")
    print("-------------------")

average_ending_inventory = total_ending_inventory/(n*cycle)
print("Average Ending Inventory: ", average_ending_inventory);
print("No. of days of shortage:", shortage_days);

plt.plot(y)